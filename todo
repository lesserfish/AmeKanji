Template:
<?xml version="1.0" encoding="UTF-8">
<template>
    <field>
        Kanji Writing: @kanji
        Hiragana Writing: @hiragana

        The level difficulty of this card is: @JLPTLVL
    </field>
</template>


class Ame
{

	ame_result loadConfigurationFromFile( ...
	ame_result loadConfigurationFromString( std::vector<string>  <- change this. new overload
	ame_result loadWordlistFromFile(....
	ame_result loadWordlistFromString( std::vector <stringZ
	ame_result loadTemplateFromFile(....
	ame_result loadTemplateFronString( std::vector <string>
	ame_result loadLibrary()
	template<class T....> ame_result loadLibrary()
	ame_result setParser(
	template<class T... > ame_result setParserManually(std::function<ame_result(T.....
	ame_result setWeb(....
	template<class T...> ame_result setWebManually( std::function<ame_result(....
	ame_result setRegex(...
	template<class T...> ame_result setRegexManually( ....
	ame_result createDeck(AnkiDeck &deck, std::vector<std::string>> Args .....
	
	ame_result SetUpCallback(std::function<void(callbackIno)> f)
	std::function<void(callbackInfo> callbackFunction; // Call this function on every step of the main loop.
}

class AnkiDeck
{
	std::string Fields;
	ame_result SaveToFile(...
	ame_result AsString(....

}

class Library
{
	loadConfiguration(....
	SetParserManually(....
	setParserAutomatically(....
	setWebManually(
	setWebAutomatically(....
	setRegexAutomatically
	setRegexManually
	ame_result PopulateCard(T &card, ....
	ame_result downloadMedia(T &card, std::string directory

}

